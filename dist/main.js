(()=>{"use strict";var n={771:(n,t,e)=>{e.d(t,{Z:()=>C});var r=e(15),o=e.n(r),i=e(645),a=e.n(i),s=e(434),A=e(667),c=e.n(A),d=e(823),l=e(910),p=e(322),u=a()(o());u.i(s.Z);var g=c()(d),m=c()(l),f=c()(p);u.push([n.id,"#main-menu {\n  display: grid;\n  grid-template-rows: repeat(10, 71.2px);\n  grid-template-columns: repeat(10, 80px);\n  justify-items: center;\n  background: url("+g+");\n  width: 800px;\n  height: 712px;\n  margin: 0 auto;\n}\n\n#title {\n  grid-row: 2 / 3;\n  grid-column: 1 / 11;\n  font-size: 65px;\n  color: white;\n  margin-top: 40px;\n}\n\n#description {\n  grid-row: 4 / 5;\n  grid-column: 2 / 10;\n  align-self: center;\n  text-align: center;\n  font-size: 30px;\n  color: #402218;\n  text-shadow: 2px 2px rgba(255, 255, 255, 0.541);\n}\n\n.home-button {\n  grid-column: 4 / 8;\n  font-size: 25px;\n  color: #402218;\n  cursor: pointer;\n  background-color: white;\n  width: 200px;\n  height: 50px;\n  border-radius: 10px;\n  border: none;\n  box-shadow: 3px 3px #00000054;\n}\n\n#start-game-button {\n  grid-row: 6 / 7;\n}\n\n#how-to-play-button {\n  grid-row: 7 / 8;\n}\n\nsection {\n  background: url("+g+');\n  background-size: 100% 100%;\n  width: 1000px;\n  height: 712px;\n  margin: 0 auto;\n  padding: 50px 120px;\n}\n\n#drag-container {\n  display: grid;\n  grid-template-rows: repeat(10, 71.2px);\n  grid-template-columns: repeat(10, 100px);\n  justify-items: center;\n  background-color: rgba(255, 255, 255, 0.5);\n  height: 712px;\n}\n\n.home {\n  grid-row: 1 / 2;\n  grid-column: 1 / 2;\n  margin-top: 30px;\n  margin-left: 40px;\n  filter: brightness(0) invert(1) drop-shadow(0 0 0.75rem #402218);\n}\n\n.chapter-title {\n  grid-row: 1 / 2;\n  grid-column: 1 / 11;\n  font-size: 65px;\n  color: #402218;\n  margin-top: 40px;\n}\n\n.chapter-story, .chapter-question {\n  font-size: 25px;\n  color: #402218;\n  text-shadow: 1px 1px rgba(255, 255, 255, 0.5);\n  margin-top: 20px;\n  margin-left: 20px;\n}\n\n.chapter-story {\n  grid-row: 3 / 5;\n  grid-column: 1 / 6;\n}\n\n.chapter-question {\n  grid-row: 5 / 7;\n  grid-column: 1 / 6;\n}\n\nimg {\n  height: 70px;\n  width: 70px;\n}\n\n.drop-container {\n  grid-row: 7 / 8;\n  grid-column: 3 / 4;\n}\n\n.drop-container img {\n  opacity: 0;\n}\n\n.drop-background {\n  grid-row: 7 / 8;\n  grid-column: 2 /3;\n  width: 280px;\n  height: 280px;\n  margin-bottom: 20px;\n}\n\n.wrong,\n.right,\n.drop-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: white;\n  width: 105px;\n  height: 105px;\n  border-radius: 50%;\n}\n\n.wrong,\n.right {\n  cursor: pointer;\n}\n\n.wrong {\n  grid-row: 5/ 6;\n  grid-column: 7 / 8;\n}\n\n.right {\n  grid-row: 5 / 6;\n  grid-column: 9 / 10;\n}\n\n.hide {\n  display: none;\n}\n\n.absolute {\n  position: absolute;\n}\n\n.drop-effect {\n  background: rgba(58, 226, 36, 0.2);\n}\n\n@font-face {\n  font-family: "PWApril";\n  src: url('+m+');\n}\n\n@font-face {\n  font-family: "SuperKid";\n  src: url('+f+');\n}\n\nbody,\nbutton {\n  font-family: "SuperKid";\n}\n\nbody {\n  background-color: #c68b59;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-family: "PWApril";\n  font-size: 200%;\n}\n',"",{version:3,sources:["webpack://./src/styles/index.css"],names:[],mappings:"AAEA;EACE,aAAa;EACb,sCAAsC;EACtC,uCAAuC;EACvC,qBAAqB;EACrB,mDAAgD;EAChD,YAAY;EACZ,aAAa;EACb,cAAc;AAChB;;AAEA;EACE,eAAe;EACf,mBAAmB;EACnB,eAAe;EACf,YAAY;EACZ,gBAAgB;AAClB;;AAEA;EACE,eAAe;EACf,mBAAmB;EACnB,kBAAkB;EAClB,kBAAkB;EAClB,eAAe;EACf,cAAc;EACd,+CAA+C;AACjD;;AAEA;EACE,kBAAkB;EAClB,eAAe;EACf,cAAc;EACd,eAAe;EACf,uBAAuB;EACvB,YAAY;EACZ,YAAY;EACZ,mBAAmB;EACnB,YAAY;EACZ,6BAA6B;AAC/B;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,mDAAgD;EAChD,0BAA0B;EAC1B,aAAa;EACb,aAAa;EACb,cAAc;EACd,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,sCAAsC;EACtC,wCAAwC;EACxC,qBAAqB;EACrB,0CAA0C;EAC1C,aAAa;AACf;;AAEA;EACE,eAAe;EACf,kBAAkB;EAClB,gBAAgB;EAChB,iBAAiB;EACjB,gEAAgE;AAClE;;AAEA;EACE,eAAe;EACf,mBAAmB;EACnB,eAAe;EACf,cAAc;EACd,gBAAgB;AAClB;;AAEA;EACE,eAAe;EACf,cAAc;EACd,6CAA6C;EAC7C,gBAAgB;EAChB,iBAAiB;AACnB;;AAEA;EACE,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,YAAY;EACZ,WAAW;AACb;;AAEA;EACE,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,eAAe;EACf,iBAAiB;EACjB,YAAY;EACZ,aAAa;EACb,mBAAmB;AACrB;;AAEA;;;EAGE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,uBAAuB;EACvB,YAAY;EACZ,aAAa;EACb,kBAAkB;AACpB;;AAEA;;EAEE,eAAe;AACjB;;AAEA;EACE,cAAc;EACd,kBAAkB;AACpB;;AAEA;EACE,eAAe;EACf,mBAAmB;AACrB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,kCAAkC;AACpC;;AAEA;EACE,sBAAsB;EACtB,4CAAgC;AAClC;;AAEA;EACE,uBAAuB;EACvB,4CAAiC;AACnC;;AAEA;;EAEE,uBAAuB;AACzB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;;;;;;EAME,sBAAsB;EACtB,eAAe;AACjB",sourcesContent:['@import "reset.css";\n\n#main-menu {\n  display: grid;\n  grid-template-rows: repeat(10, 71.2px);\n  grid-template-columns: repeat(10, 80px);\n  justify-items: center;\n  background: url(../images/styling/parchment.png);\n  width: 800px;\n  height: 712px;\n  margin: 0 auto;\n}\n\n#title {\n  grid-row: 2 / 3;\n  grid-column: 1 / 11;\n  font-size: 65px;\n  color: white;\n  margin-top: 40px;\n}\n\n#description {\n  grid-row: 4 / 5;\n  grid-column: 2 / 10;\n  align-self: center;\n  text-align: center;\n  font-size: 30px;\n  color: #402218;\n  text-shadow: 2px 2px rgba(255, 255, 255, 0.541);\n}\n\n.home-button {\n  grid-column: 4 / 8;\n  font-size: 25px;\n  color: #402218;\n  cursor: pointer;\n  background-color: white;\n  width: 200px;\n  height: 50px;\n  border-radius: 10px;\n  border: none;\n  box-shadow: 3px 3px #00000054;\n}\n\n#start-game-button {\n  grid-row: 6 / 7;\n}\n\n#how-to-play-button {\n  grid-row: 7 / 8;\n}\n\nsection {\n  background: url(../images/styling/parchment.png);\n  background-size: 100% 100%;\n  width: 1000px;\n  height: 712px;\n  margin: 0 auto;\n  padding: 50px 120px;\n}\n\n#drag-container {\n  display: grid;\n  grid-template-rows: repeat(10, 71.2px);\n  grid-template-columns: repeat(10, 100px);\n  justify-items: center;\n  background-color: rgba(255, 255, 255, 0.5);\n  height: 712px;\n}\n\n.home {\n  grid-row: 1 / 2;\n  grid-column: 1 / 2;\n  margin-top: 30px;\n  margin-left: 40px;\n  filter: brightness(0) invert(1) drop-shadow(0 0 0.75rem #402218);\n}\n\n.chapter-title {\n  grid-row: 1 / 2;\n  grid-column: 1 / 11;\n  font-size: 65px;\n  color: #402218;\n  margin-top: 40px;\n}\n\n.chapter-story, .chapter-question {\n  font-size: 25px;\n  color: #402218;\n  text-shadow: 1px 1px rgba(255, 255, 255, 0.5);\n  margin-top: 20px;\n  margin-left: 20px;\n}\n\n.chapter-story {\n  grid-row: 3 / 5;\n  grid-column: 1 / 6;\n}\n\n.chapter-question {\n  grid-row: 5 / 7;\n  grid-column: 1 / 6;\n}\n\nimg {\n  height: 70px;\n  width: 70px;\n}\n\n.drop-container {\n  grid-row: 7 / 8;\n  grid-column: 3 / 4;\n}\n\n.drop-container img {\n  opacity: 0;\n}\n\n.drop-background {\n  grid-row: 7 / 8;\n  grid-column: 2 /3;\n  width: 280px;\n  height: 280px;\n  margin-bottom: 20px;\n}\n\n.wrong,\n.right,\n.drop-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: white;\n  width: 105px;\n  height: 105px;\n  border-radius: 50%;\n}\n\n.wrong,\n.right {\n  cursor: pointer;\n}\n\n.wrong {\n  grid-row: 5/ 6;\n  grid-column: 7 / 8;\n}\n\n.right {\n  grid-row: 5 / 6;\n  grid-column: 9 / 10;\n}\n\n.hide {\n  display: none;\n}\n\n.absolute {\n  position: absolute;\n}\n\n.drop-effect {\n  background: rgba(58, 226, 36, 0.2);\n}\n\n@font-face {\n  font-family: "PWApril";\n  src: url("../fonts/PWApril.ttf");\n}\n\n@font-face {\n  font-family: "SuperKid";\n  src: url("../fonts/SuperKid.ttf");\n}\n\nbody,\nbutton {\n  font-family: "SuperKid";\n}\n\nbody {\n  background-color: #c68b59;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-family: "PWApril";\n  font-size: 200%;\n}\n'],sourceRoot:""}]);const C=u},434:(n,t,e)=>{e.d(t,{Z:()=>s});var r=e(15),o=e.n(r),i=e(645),a=e.n(i)()(o());a.push([n.id,"/* http://meyerweb.com/eric/tools/css/reset/ \n    v2.0 | 20110126\n    License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}","",{version:3,sources:["webpack://./src/styles/reset.css"],names:[],mappings:"AAAA;;;CAGC;;AAED;;;;;;;;;;;;;CAaC,SAAS;CACT,UAAU;CACV,SAAS;CACT,eAAe;CACf,aAAa;CACb,wBAAwB;AACzB;AACA,gDAAgD;AAChD;;CAEC,cAAc;AACf;AACA;CACC,cAAc;AACf;AACA;CACC,gBAAgB;AACjB;AACA;CACC,YAAY;AACb;AACA;;CAEC,WAAW;CACX,aAAa;AACd;AACA;CACC,yBAAyB;CACzB,iBAAiB;AAClB",sourcesContent:["/* http://meyerweb.com/eric/tools/css/reset/ \n    v2.0 | 20110126\n    License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}"],sourceRoot:""}]);const s=a},645:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e=n(t);return t[2]?"@media ".concat(t[2]," {").concat(e,"}"):e})).join("")},t.i=function(n,e,r){"string"==typeof n&&(n=[[null,n,""]]);var o={};if(r)for(var i=0;i<this.length;i++){var a=this[i][0];null!=a&&(o[a]=!0)}for(var s=0;s<n.length;s++){var A=[].concat(n[s]);r&&o[A[0]]||(e&&(A[2]?A[2]="".concat(e," and ").concat(A[2]):A[2]=e),t.push(A))}},t}},15:n=>{function t(n,t){(null==t||t>n.length)&&(t=n.length);for(var e=0,r=new Array(t);e<t;e++)r[e]=n[e];return r}n.exports=function(n){var e,r,o=(r=4,function(n){if(Array.isArray(n))return n}(e=n)||function(n,t){var e=n&&("undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"]);if(null!=e){var r,o,i=[],a=!0,s=!1;try{for(e=e.call(n);!(a=(r=e.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(n){s=!0,o=n}finally{try{a||null==e.return||e.return()}finally{if(s)throw o}}return i}}(e,r)||function(n,e){if(n){if("string"==typeof n)return t(n,e);var r=Object.prototype.toString.call(n).slice(8,-1);return"Object"===r&&n.constructor&&(r=n.constructor.name),"Map"===r||"Set"===r?Array.from(n):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?t(n,e):void 0}}(e,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=o[1],a=o[3];if("function"==typeof btoa){var s=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),A="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s),c="/*# ".concat(A," */"),d=a.sources.map((function(n){return"/*# sourceURL=".concat(a.sourceRoot||"").concat(n," */")}));return[i].concat(d).concat([c]).join("\n")}return[i].join("\n")}},667:n=>{n.exports=function(n,t){return t||(t={}),"string"!=typeof(n=n&&n.__esModule?n.default:n)?n:(/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),t.hash&&(n+=t.hash),/["'() \t\n]/.test(n)||t.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n)}},695:n=>{var t={};n.exports=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}},379:n=>{var t=[];function e(n){for(var e=-1,r=0;r<t.length;r++)if(t[r].identifier===n){e=r;break}return e}function r(n,r){for(var i={},a=[],s=0;s<n.length;s++){var A=n[s],c=r.base?A[0]+r.base:A[0],d=i[c]||0,l="".concat(c," ").concat(d);i[c]=d+1;var p=e(l),u={css:A[1],media:A[2],sourceMap:A[3]};-1!==p?(t[p].references++,t[p].updater(u)):t.push({identifier:l,updater:o(u,r),references:1}),a.push(l)}return a}function o(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap)return;e.update(n=t)}else e.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var s=e(i[a]);t[s].references--}for(var A=r(n,o),c=0;c<i.length;c++){var d=e(i[c]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}i=A}}},216:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t),t}},795:n=>{n.exports=function(n){var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var r=e.css,o=e.media,i=e.sourceMap;o?n.setAttribute("media",o):n.removeAttribute("media"),i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(r,n)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},910:(n,t,e)=>{n.exports=e.p+"bea0763a288c0fd5bfb5.ttf"},322:(n,t,e)=>{n.exports=e.p+"fc19ccd3a442ee69170e.ttf"},429:(n,t,e)=>{n.exports=e.p+"f1558e7f3715ad742a65.png"},978:(n,t,e)=>{n.exports=e.p+"6b8c1fb76d4747f00238.png"},823:(n,t,e)=>{n.exports=e.p+"0819c46e8d81490a793b.png"}},t={};function e(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={id:r,exports:{}};return n[r](i,i.exports,e),i.exports}e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var r in t)e.o(t,r)&&!e.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:t[r]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),e.r=n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},(()=>{var n;e.g.importScripts&&(n=e.g.location+"");var t=e.g.document;if(!n&&t&&(t.currentScript&&(n=t.currentScript.src),!n)){var r=t.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=n})(),(()=>{var n={};e.r(n);var t=e(379),r=e.n(t),o=e(795),i=e.n(o),a=e(695),s=e.n(a),A=e(216),c=e.n(A),d=e(771),l={styleTagTransform:function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}},setAttributes:function(n){var t=e.nc;t&&n.setAttribute("nonce",t)},insert:function(n){var t=s()("head");if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(n)}};l.domAPI=i(),l.insertStyleElement=c(),r()(d.Z,l),d.Z&&d.Z.locals&&d.Z.locals;const p=(n,t,e,r)=>{let o=!1;return{setCompletionStatus:()=>o=!o,getCompletionStatus:()=>o,getStory:()=>n,getImages:()=>t,getQuestion:()=>e,getChapterNumber:()=>r}},u="Placeholder story. Placeholder story. Placeholder story. Placeholder story. Placeholder story. Placeholder story.",g="Is it good question?",m=p(u,[{cssClass:"drop-container",url:"https://images.unsplash.com/photo-1548802673-380ab8ebc7b7?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=750&q=80"},{cssClass:"right",url:"https://images.unsplash.com/photo-1548802673-380ab8ebc7b7?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=750&q=80"},{cssClass:"wrong",url:"https://images.unsplash.com/photo-1592194996308-7b43878e84a6?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=668&q=80"}],g,1),f=p(u,[{cssClass:"drop-container",url:"https://images.unsplash.com/photo-1518717758536-85ae29035b6d?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8ZG9nc3xlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60"},{cssClass:"right",url:"https://images.unsplash.com/photo-1518717758536-85ae29035b6d?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8ZG9nc3xlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60"},{cssClass:"wrong",url:"https://images.unsplash.com/photo-1568572933382-74d440642117?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=750&q=80"}],g,2),C=p(u,[{cssClass:"drop-container",url:"https://images.unsplash.com/photo-1559818454-1b46997bfe30?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=668&q=80"},{cssClass:"right",url:"https://images.unsplash.com/photo-1559818454-1b46997bfe30?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=668&q=80"},{cssClass:"wrong",url:"https://images.unsplash.com/photo-1523362628745-0c100150b504?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1786&q=80"}],g,3);function h(...n){const t=document.querySelector("#content");t.textContent="",n.forEach((n=>{t.append(n)}))}const b=(n,t)=>{n.addEventListener("mousedown",(e=>{e.preventDefault();const r=e.pageX-n.getBoundingClientRect().left,o=e.pageY-n.getBoundingClientRect().top;n.style.left=e.pageX-r+"px",n.style.top=e.pageY-o+"px",n.classList.add("absolute");const i=n.getBoundingClientRect().height,a=n.getBoundingClientRect().width,s=t.getBoundingClientRect().top,A=t.getBoundingClientRect().bottom,c=t.getBoundingClientRect().left,d=t.getBoundingClientRect().right,l=t=>{t.pageX-r>c&&t.pageX-r+a<d&&(n.style.left=t.pageX-r+"px"),t.pageY-o>s&&t.pageY-o+i<A&&(n.style.top=t.pageY-o+"px")};document.addEventListener("mousemove",l),document.addEventListener("mouseup",(()=>{document.removeEventListener("mousemove",l)}))}))};var E=e(429),x=e(978);const B=(n,t)=>{const e=()=>{const e=document.createElement("div"),r=n.getImages();for(let n of r){const t=document.createElement("img");t.src=n.url;const r=document.createElement("div");r.classList.add(n.cssClass),r.append(t),"drop-container"!==n.cssClass&&b(r,e),e.append(r)}return((e,r,o)=>{let i,a,s,A=!1;new MutationObserver((()=>{i=r.getBoundingClientRect().top,a=r.getBoundingClientRect().bottom,s=r.getBoundingClientRect().left;const n=e.getBoundingClientRect().top,t=e.getBoundingClientRect().bottom,o=e.getBoundingClientRect().left,c=(a-i)/2,d=i+c,l=s+c,p=(t-n)/2,u=n+p,g=o+p,m=Math.abs(d-u),f=Math.abs(l-g);Math.sqrt(m**2+f**2)<c+p?(A=!0,r.classList.add("drop-effect")):(A=!1,r.classList.remove("drop-effect"))})).observe(e,{attributes:!0});const c=()=>{A&&(e.style.left=s+"px",e.style.top=i+"px",t(n),document.removeEventListener("mouseup",c))};document.addEventListener("mouseup",c)})(e.querySelector(".right"),e.querySelector(".drop-container")),e};return(()=>{const{homeButton:t,nextChapterButton:r}=(()=>{const n=document.createElement("img");n.classList.add("home"),n.src=E;const t=document.createElement("button");return t.textContent="--\x3e",t.classList.add("next"),{homeButton:n,nextChapterButton:t}})();r.style.visibility="hidden";const o=document.createElement("H1");o.classList.add("chapter-title"),o.textContent="Chapter 1";const i=document.createElement("p");i.classList.add("chapter-story"),i.textContent=n.getStory();const a=document.createElement("p");a.classList.add("chapter-question"),a.textContent=n.getQuestion();const s=document.createElement("img");s.src=x,s.classList.add("drop-background");const A=e();A.id="drag-container",A.append(t,r,o,i,a,s);const c=document.createElement("section");return c.append(A),c})()},y=(n=>{let t=[],e=!1;return{addChapters:(...n)=>{n.forEach((n=>{t.push(n)}))},findFirstChapter:()=>t.find((n=>1===n.getChapterNumber())),findNextChapter:n=>{const e=n.getChapterNumber();return t.find((n=>n.getChapterNumber()===e+1))},getTitle:()=>"Cool story",setCompletionStatus:()=>e=!e,getCompletionStatus:()=>e,getFinalQuizzes:()=>t.reduce(((n,t,e)=>(e%2==0&&n.push(t.quiz),n)),[])}})();y.addChapters(m,C,f);const w=(t=>{const e=n=>{const t=((n,t,e,r)=>{const o=document.createElement("div");o.setAttribute("id","chapter-end");const i=document.createElement("p");i.textContent=`Chapter ${n} complete!`;const a=document.createElement("button");a.textContent="Next Chapter",a.addEventListener("click",(()=>{h(e)}));const s=document.createElement("button");return s.textContent="Back To Home",s.addEventListener("click",(()=>{})),o.appendChild(i),o.appendChild(a),o})(n.getChapterNumber(),0,r(n));h(t)},r=r=>{r.setCompletionStatus();const o=t.findNextChapter(r);return o?B(o,e):(()=>{const e=t.getTitle();return(0,n.createStoryEnd)(e)})()};return{startFirstChapter:()=>{const n=t.findFirstChapter();return B(n,e)}}})(y).startFirstChapter(),v=((n,t)=>{const e=document.createElement("h1");e.id="title",e.textContent="Storyteller";const r=document.createElement("p");r.id="description",r.textContent="Dive into an unforgettable story experience. Be part of the story.";const o=document.createElement("button");o.id="start-game-button",o.classList.add("home-button"),o.textContent="Start game",o.addEventListener("click",(()=>h(w)));const i=document.createElement("button");i.id="how-to-play-button",i.classList.add("home-button"),i.textContent="How to play";const a=document.createElement("div");return a.id="main-menu",a.appendChild(e),a.appendChild(r),a.appendChild(o),a.appendChild(i),a})();h(v)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,